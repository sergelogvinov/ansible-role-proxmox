---

- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution_release }}.yml"
    - "../vars/empty.yml"
  tags: ['proxmox']

- name: Add ssh keys
  become: yes
  authorized_key:
    path: /root/.ssh/authorized_keys2
    user: root
    state: present
    key: "{{ proxmox_sshkey }}"
    exclusive: true
  when: proxmox_sshkey
  tags: ['proxmox']

- name: update repository
  become: yes
  tags: ['proxmox']
  block:
    - name: remove proxmox repositoryes
      file:
        path: "/etc/apt/sources.list.d/{{ item }}"
        state: absent
      with_items:
        - proxmox.list
        - ceph.list

    - name: get proxmox apt key
      get_url:
        url: "https://enterprise.proxmox.com/debian/proxmox-release-{{ ansible_distribution_release }}.gpg"
        dest: /etc/apt/keyrings/proxmox-release.gpg

    - name: apt clean
      replace:
        path: /etc/apt/sources.list
        regexp: 'deb.*(download\.proxmox\.com).*'
        replace: ''

    - name: add pve-no-subscription repository
      apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/proxmox-release.gpg] http://download.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-no-subscription
        state: present
        filename: pve-no-subscription
        update_cache: false
      register: pve_no_subscription

    - name: remove pve-enterprise repository
      apt_repository:
        repo: deb https://enterprise.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-enterprise
        state: absent
        update_cache: false
      register: pve_enterprise

    - name: apt update
      apt:
        update_cache: true
      when: pve_no_subscription.changed or pve_enterprise.changed

- name: install ifupdown2
  become: yes
  apt:
    name: "ifupdown2"
    state: present
  tags: ['proxmox']

- name: install proxmox-ve
  become: yes
  apt:
    name: "{{ proxmox_packages }}"
    state: present
  when: proxmox_packages|length > 0
  register: proxmox
  tags: ['proxmox']

- name: remove repo
  become: yes
  file:
    path: /etc/apt/sources.list.d/pve-enterprise.list
    state: absent
  when: proxmox.changed
  tags: ['proxmox']

- name: remove os-prober
  become: yes
  apt:
    name: os-prober
    state: absent
  when: proxmox.changed
  tags: ['proxmox']

- include_tasks:
    file: "{{ item }}"
  with_first_found:
    - "{{ ansible_bios_vendor|regex_replace('[ ,\\.]','') }}.yml"
    - "none.yml"
  tags: ['proxmox']

- become: yes
  tags: ['proxmox']
  block:
    - name: prepare cluster firewall
      shell: "touch /etc/pve/firewall/cluster.fw"
      args:
        creates: /etc/pve/firewall/cluster.fw
    - name: firewall
      template:
        src: cluster.fw.j2
        dest: /etc/pve/firewall/cluster.fw
        owner: root
        group: www-data
        mode: 0640

    - name: prepare files
      shell: "touch /etc/pve/nodes/{{ ansible_hostname }}/host.fw"
      args:
        creates: "/etc/pve/nodes/{{ ansible_hostname }}/host.fw"
    - name: node firewall
      template:
        src: host.fw.j2
        dest: "/etc/pve/nodes/{{ ansible_hostname }}/host.fw"
        owner: root
        group: www-data
        mode: 0640
      ignore_errors: yes

- become: yes
  tags: ['proxmox']
  when: proxmox_roles|length > 0 or proxmox_users|length > 0
  block:
    - name: update role
      lineinfile:
        path: "/etc/pve/user.cfg"
        regexp: "^role:{{ item.name }}:"
        insertafter: "^role:"
        line: "role:{{ item.name }}:{{ item.priviledges|join(',') }}:"
      with_items: "{{ proxmox_roles }}"

    - name: ensure users exists
      lineinfile:
        path: "/etc/pve/user.cfg"
        regexp: "^user:{{ item.name }}:"
        insertafter: "^user:"
        line: "user:{{ item.name }}:1:0::::::"
      with_items: "{{ proxmox_users }}"
    - name: update users permissions
      lineinfile:
        path: "/etc/pve/user.cfg"
        regexp: "^acl:1:{{ item.path }}:{{ item.name }}:"
        insertafter: "^role:"
        line: "acl:1:{{ item.path }}:{{ item.name }}:{{ item.role }}:"
      with_items: "{{ proxmox_users }}"

- become: yes
  tags: ['proxmox']
  when: proxmox_openids|length > 0
  block:
    - name: prepare files
      shell: "touch /etc/pve/domains.cfg"
      args:
        creates: "/etc/pve/domains.cfg"
    - name: cluster oauth2
      template:
        src: domains.cfg.j2
        dest: "/etc/pve/domains.cfg"
        owner: root
        group: www-data
        mode: 0640
